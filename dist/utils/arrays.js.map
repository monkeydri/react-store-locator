{"version":3,"sources":["../../src/utils/arrays.js"],"names":["arraysAreEqual","array1","array2","areEqual","length","array2IncludesArray1","every","includes","element","array1IncludesArray2"],"mappings":";;;;;AAAA,IAAMA,iBAAiB,SAAjBA,cAAiB,CAACC,MAAD,EAASC,MAAT,EAAoB;AAC1C,KAAIC,WAAW,IAAf;;AAEA,KAAIF,OAAOG,MAAP,IAAiBF,OAAOE,MAA5B,EAAoCD,WAAW,KAAX,CAApC,KACK;AACJ,MAAME,uBAAuBJ,OAAOK,KAAP,CAAa;AAAA,UAAWJ,OAAOK,QAAP,CAAgBC,OAAhB,CAAX;AAAA,GAAb,CAA7B;AACA,MAAMC,uBAAuBP,OAAOI,KAAP,CAAa;AAAA,UAAWL,OAAOM,QAAP,CAAgBC,OAAhB,CAAX;AAAA,GAAb,CAA7B;AACAL,aAAWM,wBAAwBJ,oBAAnC;AACA;AACD,QAAOF,QAAP;AACA,CAVD;;QAYSH,c,GAAAA,c","file":"arrays.js","sourcesContent":["const arraysAreEqual = (array1, array2) => {\n\tlet areEqual = true\n\n\tif (array1.length != array2.length) areEqual = false; \n\telse {\n\t\tconst array2IncludesArray1 = array1.every(element => array2.includes(element)); \n\t\tconst array1IncludesArray2 = array2.every(element => array1.includes(element)); \n\t\tareEqual = array1IncludesArray2 && array2IncludesArray1; \n\t}\n\treturn areEqual\n}\n\nexport { arraysAreEqual }\n"]}