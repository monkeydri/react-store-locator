{"version":3,"sources":["../../src/containers/Search.js"],"names":["initSearch","google","options","getValue","input","document","querySelector","searchBox","maps","places","Autocomplete","addListener","place","getPlace","geometry","console","warn","newBounds","ne","lat","viewport","getNorthEast","lng","sw","getSouthWest","mapState","setState","updatedAddress","props","placeholder","style","onChange"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;AAEA;;AACA;;;;AAEA,SAASA,UAAT,CAAoBC,MAApB,EAA4BC,OAA5B,EAAqCC,QAArC,EAA+C;AAC9C,KAAMC,QAAQC,SAASC,aAAT,CAAuB,0BAAvB,CAAd;AACA,KAAIF,KAAJ,EAAW;AACV,MAAMG,YAAY,IAAIN,OAAOO,IAAP,CAAYC,MAAZ,CAAmBC,YAAvB,CAAoCN,KAApC,EAA2CF,OAA3C,CAAlB;;AAEAK,YAAUI,WAAV,CAAsB,eAAtB,EAAuC,YAAW;AACjD,OAAMC,QAAQL,UAAUM,QAAV,EAAd;AACA,OAAID,KAAJ,EAAW;AACV,QAAI,CAACA,MAAME,QAAX,EAAqB;AACpBC,aAAQC,IAAR,CAAa,qCAAb;AACA;AACA;;AAJS,QAMFF,QANE,GAMWF,KANX,CAMFE,QANE;;AAOV,QAAMG,YAAY;AACjBC,SAAI;AACHC,WAAKL,SAASM,QAAT,CAAkBC,YAAlB,GAAiCF,GAAjC,EADF;AAEHG,WAAKR,SAASM,QAAT,CAAkBC,YAAlB,GAAiCC,GAAjC;AAFF,MADa;AAKjBC,SAAI;AACHJ,WAAKL,SAASM,QAAT,CAAkBI,YAAlB,GAAiCL,GAAjC,EADF;AAEHG,WAAKR,SAASM,QAAT,CAAkBI,YAAlB,GAAiCF,GAAjC;AAFF;AALa,KAAlB;AAUAG,oBAASC,QAAT,CAAkB,EAAEd,YAAF,EAASK,oBAAT,EAAlB;;AAEA,QAAMU,iBAAiB,kCAAiBf,KAAjB,CAAvB;AACA,QAAIT,QAAJ,EAAc;AACbA,cAASwB,cAAT;AACA;AACD;AACD,GA1BD;AA2BA,uCAAevB,KAAf,EAAsBG,SAAtB;AACA;AACD;;kBAEc,iBAAS;AACvB,KAAIqB,MAAM3B,MAAV,EAAkB;AACjBD,aAAW4B,MAAM3B,MAAjB,EAAyB2B,MAAM1B,OAAN,IAAiB,EAA1C,EAA8C0B,MAAMzB,QAApD;AACA;;AAED,QACC;AACC,QAAK,MADN;AAEC,aAAU,yBAFX;AAGC,eAAayB,MAAMC,WAAN,IAAqB,qBAHnC;AAIC,SAAOD,MAAME,KAAN,IAAe,EAJvB;AAKC,YAAUF,MAAMG;AALjB,GADD;AASA,C","file":"Search.js","sourcesContent":["import React, { Component } from 'react'\nimport { fitBounds } from 'google-map-react/utils'\nimport { mapState } from '../state'\n\nimport { addressFromPlace } from '../utils/parse-place'\nimport { enableEnterKey } from '../utils/suggestion-event'\n\nfunction initSearch(google, options, getValue) {\n\tconst input = document.querySelector('.storeLocatorSearchInput')\n\tif (input) {\n\t\tconst searchBox = new google.maps.places.Autocomplete(input, options)\n\n\t\tsearchBox.addListener('place_changed', function() {\n\t\t\tconst place = searchBox.getPlace()\n\t\t\tif (place) {\n\t\t\t\tif (!place.geometry) {\n\t\t\t\t\tconsole.warn('Returned place contains no geometry')\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tconst { geometry } = place\n\t\t\t\tconst newBounds = {\n\t\t\t\t\tne: {\n\t\t\t\t\t\tlat: geometry.viewport.getNorthEast().lat(),\n\t\t\t\t\t\tlng: geometry.viewport.getNorthEast().lng()\n\t\t\t\t\t},\n\t\t\t\t\tsw: {\n\t\t\t\t\t\tlat: geometry.viewport.getSouthWest().lat(),\n\t\t\t\t\t\tlng: geometry.viewport.getSouthWest().lng()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tmapState.setState({ place, newBounds })\n\n\t\t\t\tconst updatedAddress = addressFromPlace(place)\n\t\t\t\tif (getValue) {\n\t\t\t\t\tgetValue(updatedAddress)\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\tenableEnterKey(input, searchBox)\n\t}\n}\n\nexport default props => {\n\tif (props.google) {\n\t\tinitSearch(props.google, props.options || {}, props.getValue)\n\t}\n\n\treturn (\n\t\t<input\n\t\t\ttype=\"text\"\n\t\t\tclassName=\"storeLocatorSearchInput\"\n\t\t\tplaceholder={props.placeholder || 'Enter Your Location'}\n\t\t\tstyle={props.style || {}}\n\t\t\tonChange={props.onChange}\n\t\t/>\n\t)\n}\n"]}