{"version":3,"sources":["../../src/containers/Map.js"],"names":["findLocationIndex","id","locations","i","length","arraysAreIdentical","array1","array2","array2IncludesArray1","every","includes","element","array1IncludesArray2","Map","props","createMapOptions","bind","changeMap","toggleLocation","closeLocation","onPlaceChanged","initCenterMap","checkGoogleMarker","handleMapLoad","state","foundLocations","center","zoom","googleMarkers","place","setMap","setState","mapLoaded","bounds","ne","nw","se","sw","filter","location","lat","lng","map","distanceMeters","geolib","getDistance","distanceMiles","toFixed","distanceFromCenter","onChange","centerMarker","console","warn","marker","createMarker","newMarker","forEach","position","googleMarker","distance","foundLocation","index","item","show","maps","styles","mapStyle","google","newBounds","mapState","size","mapEl","width","offsetWidth","height","offsetHeight","toString","searchBox","getPlace","undefined","submitSearch","geometry","viewport","getNorthEast","getSouthWest","subscribe","options","input","searchInput","initSearch","value","places","Autocomplete","addListener","defaultZoom","defaultCenter","LatLngBounds","extend","LatLng","unsubscribe","prevProps","prevState","updateMap","prevLocationsIds","updatedLocationsIds","additionalLocations","updatedLocation","previousAndAdditionalLocations","updatedLocations","service","PlacesService","findPlaceFromQuery","query","fields","results","status","result","PlacesServiceStatus","OK","Pin","pin","component","top","left","zIndex","searchStyle","Array","isArray","pinProps","children","infoStyle","main","Object","keys","k","marginBottom","close","Component","defaultProps","customIcon","path","color","borderColor"],"mappings":"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","file":"Map.js","sourcesContent":["import React, { Component } from 'react'\nimport GoogleMap from 'google-map-react'\nimport { fitBounds } from 'google-map-react/utils'\nimport geolib from 'geolib'\nimport Pin from './Pin'\nimport Info from './Info'\nimport GoogleMarker from './GoogleMarker'\nimport infoStyle from './InfoStyle'\nimport searchStyle from './SearchStyle'\nimport { Subscribe } from 'statable'\nimport { mapState } from '../state'\n\nfunction findLocationIndex(id, locations) {\n for (let i = locations.length; i--; ) {\n  if (locations[i].id === id) {\n   return i\n  }\n }\n return null\n}\n\nfunction arraysAreIdentical(array1, array2) {\n  if (array1.length != array2.length) return false;\n  else\n  {\n   const array2IncludesArray1 = array1.every(element => array2.includes(element));\n   const array1IncludesArray2 = array2.every(element => array1.includes(element));\n   return array1IncludesArray2 && array2IncludesArray1;\n  }\n}\n\nexport default class Map extends Component {\n constructor(props) {\n  super(props)\n  this.createMapOptions = this.createMapOptions.bind(this)\n  this.changeMap = this.changeMap.bind(this)\n  this.toggleLocation = this.toggleLocation.bind(this)\n  this.closeLocation = this.closeLocation.bind(this)\n  this.onPlaceChanged = this.onPlaceChanged.bind(this)\n  this.initCenterMap = this.initCenterMap.bind(this)\n  this.checkGoogleMarker = this.checkGoogleMarker.bind(this)\n  this.handleMapLoad = this.handleMapLoad.bind(this)\n\n  this.state = {\n   locations: [],\n   foundLocations: [],\n   center: null,\n   zoom: null,\n   googleMarkers: [],\n   place: null,\n   googleMarkers: [],\n   mapLoaded: false\n  }\n }\n\n checkGoogleMarker() {\n  for (let i = this.state.googleMarkers.length; i--; ) {\n   // this removes each marker from the map\n   this.state.googleMarkers[i].setMap(null)\n  }\n\n  this.setState({\n   googleMarkers: []\n  })\n }\n\n changeMap(props) {\n  if (!this.state.mapLoaded) return\n  const {\n   bounds: { ne, nw, se, sw }\n  } = props\n  const { locations } = this.state\n  // locations within the map bounds\n  const foundLocations = locations.filter(location => {\n   if (\n    location.lat > se.lat &&\n    sw.lat &&\n    (location.lat < ne.lat && nw.lat) &&\n    (location.lng > nw.lng && sw.lng) &&\n    (location.lng < ne.lng && se.lng)\n   ) {\n    return location\n   }\n  })\n  foundLocations.map(location => {\n   const distanceMeters = geolib.getDistance(props.center, {\n    lat: location.lat,\n    lng: location.lng\n   })\n   const distanceMiles = (distanceMeters * 0.000621371).toFixed(2)\n   location.distanceFromCenter = distanceMiles\n   return { ...location }\n  })\n  this.setState({ foundLocations })\n  if (this.props.onChange) {\n   // this prevents empty array being passed before map has loaded\n   if (this.state.mapLoaded) {\n    this.props.onChange(foundLocations)\n   } else {\n    this.props.onChange(null)\n   }\n  }\n  if (this.props.centerMarker) {\n   console.warn('centerMarker will be depreciated in future versions')\n   let marker = null\n   // check to see if marker already exist at this location for search/center markers\n   let createMarker = true\n\n   if (this.state.googleMarkers.length > 0) {\n    const newMarker = {\n     lat: props.center.lat.toFixed(4),\n     lng: props.center.lng.toFixed(4)\n    }\n    this.state.googleMarkers.forEach(googleMarker => {\n     const position = {\n      lat: googleMarker.position.lat().toFixed(4),\n      lng: googleMarker.position.lng().toFixed(4)\n     }\n     if (newMarker.lng === position.lng && newMarker.lat === position.lat) {\n      createMarker = false\n     }\n    })\n   }\n   if (foundLocations.length > 0) {\n    foundLocations.forEach(foundLocation => {\n     const distance = (\n      geolib.getDistance(props.center, {\n       lat: foundLocation.lat,\n       lng: foundLocation.lng\n      }) * 0.000621371\n     ).toFixed(2)\n     if (distance <= 6.5) {\n      createMarker = false\n     }\n    })\n   }\n   if (createMarker) {\n    marker = GoogleMarker(this.props.centerMarker, this.map, props.center)\n   }\n\n   // add the new marker to arr of googleMarkers and remove all other ones\n   this.checkGoogleMarker()\n   if (marker) {\n    // this needs to be done to set the markers to null on the map, removing them\n    // from the array will not remove them from the map\n    this.setState({\n     googleMarkers: [marker]\n    })\n   }\n  }\n }\n\n toggleLocation(id) {\n  const index = findLocationIndex(id, this.state.locations)\n  if (index !== null) {\n   const locations = this.state.locations\n   locations.forEach(item => {\n    item.show ? (item.show = false) : (item.show = item.show)\n   })\n   locations[index].show = !locations[index].show\n   this.setState({ locations })\n  }\n }\n\n closeLocation(id) {\n  const index = findLocationIndex(id, this.state.locations)\n  if (index !== null) {\n   const locations = this.state.locations\n   locations[index].show = false\n   this.setState({ locations })\n  }\n }\n\n createMapOptions(maps) {\n  return {\n   styles: this.props.mapStyle\n  }\n }\n\n initCenterMap() {\n  const { google } = this.props\n\n  const { newBounds } = mapState.state\n  let size = {}\n  if (this.mapEl) {\n   size = {\n    width: this.mapEl.offsetWidth,\n    height: this.mapEl.offsetHeight\n   }\n  }\n\n  const { center, zoom } = fitBounds(newBounds, size)\n\n  if (this.props.centerMarker) {\n   console.warn('centerMarker will be depreciated in future versions')\n   this.checkGoogleMarker()\n\n   const marker = GoogleMarker(this.props.centerMarker, this.map, props.center)\n   this.setState({\n    googleMarkers: [...this.state.googleMarkers, marker]\n   })\n  }\n\n  this.setState({\n   center: center,\n   zoom: zoom.toString().length > 1 ? 9 : zoom\n  })\n }\n\n onPlaceChanged() {\n  let place = this.searchBox.getPlace()\n  if (place === this.state.place) place = undefined\n  if (place) {\n   if (this.props.submitSearch) {\n    this.props.submitSearch()\n   }\n   this.setState({ place })\n  const { geometry } = place\n  const newBounds = {\n    ne: {\n    lat: geometry.viewport.getNorthEast().lat(),\n    lng: geometry.viewport.getNorthEast().lng()\n    },\n    sw: {\n    lat: geometry.viewport.getSouthWest().lat(),\n    lng: geometry.viewport.getSouthWest().lng()\n    }\n  }\n  let size = {}\n  if (this.mapEl) {\n    size = {\n    width: this.mapEl.offsetWidth,\n    height: this.mapEl.offsetHeight\n    }\n  }\n\n  const { center, zoom } = fitBounds(newBounds, size)\n  if (this.props.centerMarker) {\n    console.warn('centerMarker will be depreciated in future versions')\n    this.checkGoogleMarker()\n\n    const marker = GoogleMarker(this.props.centerMarker, this.map, center)\n    this.setState({\n    googleMarkers: [...this.state.googleMarkers, marker]\n    })\n  }\n\n  this.setState({\n    center: center,\n    zoom: zoom.toString().length > 1 ? 9 : zoom\n  })\n  }\n }\n\n updateMap(place) {\n  if (place === this.state.place) place = undefined\n  if (place) {\n  //  if (this.props.submitSearch) {\n  //   this.props.submitSearch()\n  //  }\n   this.setState({ place })\n  const { geometry } = place\n  const newBounds = {\n    ne: {\n    lat: geometry.viewport.getNorthEast().lat(),\n    lng: geometry.viewport.getNorthEast().lng()\n    },\n    sw: {\n    lat: geometry.viewport.getSouthWest().lat(),\n    lng: geometry.viewport.getSouthWest().lng()\n    }\n  }\n  let size = {}\n  if (this.mapEl) {\n    size = {\n    width: this.mapEl.offsetWidth,\n    height: this.mapEl.offsetHeight\n    }\n  }\n\n  const { center, zoom } = fitBounds(newBounds, size)\n  if (this.props.centerMarker) {\n    console.warn('centerMarker will be depreciated in future versions')\n    this.checkGoogleMarker()\n\n    const marker = GoogleMarker(this.props.centerMarker, this.map, center)\n    this.setState({\n    googleMarkers: [...this.state.googleMarkers, marker]\n    })\n  }\n\n  this.setState({\n    center: center,\n    zoom: zoom.toString().length > 1 ? 9 : zoom\n  })\n  }\n }\n\n componentDidMount() {\n  this.changeMap()\n\n  if (mapState.state) {\n   mapState.subscribe(state => {\n    if (state.newBounds) {\n     this.initCenterMap()\n    }\n   })\n  }\n\n  const { google, options } = this.props\n  const input = this.searchInput\n  if (this.props.initSearch) {\n   input.value = this.props.initSearch\n  }\n  this.searchBox = new google.maps.places.Autocomplete(this.input, options)\n  this.searchBox.addListener('place_changed', this.onPlaceChanged)\n\n  let defaultZoom = 8,\n   defaultCenter = { lat: 0, lng: 180 }\n  if (\n   !this.props.initSearch &&\n   (this.props.locations && this.props.locations.length > 0)\n  ) {\n   const bounds = new google.maps.LatLngBounds()\n   this.props.locations.map(location => {\n    bounds.extend(new google.maps.LatLng(location.lat, location.lng))\n   })\n   const newBounds = {\n    ne: {\n     lat: bounds.getNorthEast().lat(),\n     lng: bounds.getNorthEast().lng()\n    },\n    sw: {\n     lat: bounds.getSouthWest().lat(),\n     lng: bounds.getSouthWest().lng()\n    }\n   }\n   let size = {}\n   if (this.mapEl) {\n    size = {\n     width: this.mapEl.offsetWidth,\n     height: this.mapEl.offsetHeight\n    }\n   }\n   const { center, zoom } = fitBounds(newBounds, size)\n   defaultZoom = zoom\n   defaultCenter = center\n  }\n\n  this.setState({\n   locations: this.props.locations,\n   zoom: defaultZoom,\n   center: defaultCenter\n  })\n }\n\n componentWillUnmount() {\n  mapState.unsubscribe()\n }\n\n componentDidUpdate(prevProps, prevState)\n {\n   // update map place changes\n   if (prevProps.place !== this.props.place)\n   {\n     this.updateMap(this.props.place);\n   }\n\n   // update locations copy in state\n   // get ids of previous and current locations (props)\n   const prevLocationsIds = prevProps.locations.map(location => location.id);\n   const updatedLocationsIds = this.props.locations.map(location => location.id);\n   // check if arrays differs\n   if (!arraysAreIdentical(prevLocationsIds,updatedLocationsIds))\n   {\n     // get any additional locations (that were not in previous props)\n     const additionalLocations = this.props.locations.filter(updatedLocation => !prevLocationsIds.includes(updatedLocation.id));\n     // add any location \n     const previousAndAdditionalLocations = [...prevProps.locations, ...additionalLocations];\n     // remove any location that were in state before and not in updated props\n     const updatedLocations = previousAndAdditionalLocations.filter(location => updatedLocationsIds.includes(location.id));\n     // update state\n     this.setState({ locations: updatedLocations });\n   }\n }\n\n handleMapLoad({ map, maps }) {\n  this.map = map\n  if (this.props.initSearch) {\n   const service = new google.maps.places.PlacesService(map)\n   service.findPlaceFromQuery(\n    {\n     query: this.props.initSearch,\n     fields: [\n      'photos',\n      'formatted_address',\n      'name',\n      'rating',\n      'opening_hours',\n      'geometry'\n     ]\n    },\n    (results, status) => {\n     const result = results ? results[0] : null\n     if (!result || results.length < 1) {\n      console.warn('No locations with given query')\n      let defaultZoom = 8,\n       defaultCenter = { lat: 0, lng: 180 }\n      if (this.props.locations && this.props.locations.length > 0) {\n       const bounds = new google.maps.LatLngBounds()\n       this.props.locations.map(location => {\n        bounds.extend(new google.maps.LatLng(location.lat, location.lng))\n       })\n       const newBounds = {\n        ne: {\n         lat: bounds.getNorthEast().lat(),\n         lng: bounds.getNorthEast().lng()\n        },\n        sw: {\n         lat: bounds.getSouthWest().lat(),\n         lng: bounds.getSouthWest().lng()\n        }\n       }\n       let size = {}\n       if (this.mapEl) {\n        size = {\n         width: this.mapEl.offsetWidth,\n         height: this.mapEl.offsetHeight\n        }\n       }\n       const { center, zoom } = fitBounds(newBounds, size)\n       defaultZoom = zoom\n       defaultCenter = center\n      }\n      this.setState({\n       locations: this.props.locations,\n       zoom: defaultZoom,\n       center: defaultCenter,\n       mapLoaded: true\n      })\n     } else {\n      if (status == google.maps.places.PlacesServiceStatus.OK) {\n       const { geometry } = result\n       const newBounds = {\n        ne: {\n         lat: geometry.viewport.getNorthEast().lat(),\n         lng: geometry.viewport.getNorthEast().lng()\n        },\n        sw: {\n         lat: geometry.viewport.getSouthWest().lat(),\n         lng: geometry.viewport.getSouthWest().lng()\n        }\n       }\n       const size = {\n        width: this.mapEl.offsetWidth,\n        height: this.mapEl.offsetHeight\n       }\n       const { center, zoom } = fitBounds(newBounds, size)\n       this.setState({\n        center: center,\n        zoom: zoom.toString().length > 1 ? 9 : zoom,\n        mapLoaded: true\n       })\n      }\n     }\n    }\n   )\n  }\n  if (this.props.mapLoaded) {\n   this.props.mapLoaded()\n  }\n  this.setState({ mapLoaded: true })\n }\n\n render() {\n  let Pin = this.props.pin.component || this.props.pin\n  const { foundLocations } = this.state\n\n  const updatedLocations =\n   foundLocations.length > 0 ? foundLocations : this.props.locations\n  return (\n   <div\n    style={{\n     height: this.props.height,\n     width: this.props.width,\n     position: 'relative'\n    }}\n    ref={mapEl => (this.mapEl = mapEl)}\n   >\n    <div\n     style={{\n      position: 'absolute',\n      top: 5,\n      left: 5,\n      zIndex: 2\n     }}\n    >\n     <input\n      className=\"storeLocatorInput\"\n      style={searchStyle.searchInput}\n      onChange={this.onPlaceChanged}\n      ref={input => (this.searchInput = input)}\n      type=\"text\"\n      placeholder=\"Enter Your Location...\"\n     />\n    </div>\n    <GoogleMap\n     // ref={ref => (this.map = ref)}\n     onGoogleApiLoaded={this.handleMapLoad}\n     yesIWantToUseGoogleMapApiInternals\n     center={this.props.center || this.state.center}\n     zoom={this.props.zoom || this.state.zoom}\n     options={this.createMapOptions}\n     onChange={this.changeMap}\n    >\n     {Array.isArray(this.props.locations)\n      ? updatedLocations.map(location => {\n         return (\n          <Pin\n           key={location.id}\n           handleLocationClick={this.toggleLocation}\n           lat={location.lat}\n           lng={location.lng}\n           {...location}\n           {...this.props}\n           pinProps={this.props.pin.pinProps || null}\n          >\n           {!this.props.children ? (\n            <Info show={location.show} style={this.props.infoStyle}>\n             <div style={infoStyle.main}>\n              {Object.keys(location).map((k, i) => {\n               if (k === 'id' || k === 'lat' || k === 'lng' || k === 'show')\n                return\n               return (\n                <div\n                 key={k}\n                 style={\n                  k === 'name'\n                   ? { marginBottom: '12px' }\n                   : { marginBottom: '2px' }\n                 }\n                >\n                 {`${location[k]}`}\n                </div>\n               )\n              })}\n              <div\n               style={infoStyle.close}\n               onClick={() => this.closeLocation(location.id)}\n              >\n               ×\n              </div>\n             </div>\n            </Info>\n           ) : (\n            this.props.children(location, this.closeLocation)\n           )}\n          </Pin>\n         )\n        })\n      : console.warn('Locations must be an array of markers')}\n    </GoogleMap>\n   </div>\n  )\n }\n}\n\nMap.defaultProps = {\n pin: Pin,\n mapStyle: {},\n height: '800px',\n width: '100%',\n customIcon: {\n  path:\n   'M 0,0 C -2,-20 -10,-22 -10,-30 A 10,10 0 1,1 10,-30 C 10,-22 2,-20 0,0 z M -2,-30 a 2,2 0 1,1 4,0 2,2 0 1,1 -4,0',\n  color: '#FE7569',\n  borderColor: '#000'\n }\n}\n"]}