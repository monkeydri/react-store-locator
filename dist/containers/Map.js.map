{"version":3,"sources":["../../src/containers/Map.js"],"names":["getLocationsBounds","locations","bounds","google","maps","LatLngBounds","map","extend","LatLng","parseFloat","location","lat","lng","locationsWithDistance","center","distanceMeters","geolib","getDistance","distanceMiles","toFixed","distanceFromCenter","Map","props","createMapOptions","bind","onMapChanged","toggleLocation","closeLocation","onPlaceChanged","handleGoogleMapApiLoad","onClusterClick","onMapStateChange","searchByQuery","state","updatedLocations","zoom","place","mapLoaded","newBounds","searchInput","setState","console","warn","JSON","stringify","ne","sw","filter","error","updatedLocationsInBounds","locationsInBounds","updatedLocationsInBoundsWithDistance","onChange","enableClusters","cluster","length","radius","extent","nodeSize","minZoom","maxZoom","callBackOnChange","id","show","mapStyle","mapOptions","styles","getPlaceViewport","toString","e","target","value","searchBox","getPlace","submitSearch","moveMap","updatedAddress","getValue","getNorthEast","getSouthWest","size","mapEl","width","offsetWidth","height","offsetHeight","geometry","viewPortWithBounds","viewport","defaultCenter","defaultZoom","getCenter","nw","se","googleMapRef","event","clearInstanceListeners","mapState","unsubscribe","subscribe","options","input","initSearch","places","Autocomplete","addListener","initialCenter","initialZoom","getLocationsViewport","prevProps","prevState","propsInitSearch","propsPlace","propsLocations","prevPropsInitSearch","prevPropsPlace","prevPropsLocations","statePlace","stateUpdatedLocations","prevStatePlace","prevStateUpdatedLocations","prevPropsLocationsArray","prevPropsLocationsIds","propsLocationsIds","addedLocations","includes","propsLocation","removedLocations","prevPropsLocation","loc","getBounds","query","service","PlacesService","findPlaceFromQuery","fields","results","status","result","locationsViewport","PlacesServiceStatus","OK","getCurrentArea","Pin","pin","component","ClusterPin","clusterPin","defaultClusterPin","position","top","left","zIndex","searchStyle","ref","key","googleApiKey","tilesRendered","gestureHandling","cluster_id","updates","pinProps","children","infoStyle","main","Object","keys","k","i","marginBottom","close","Component","defaultProps"],"mappings":"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","file":"Map.js","sourcesContent":["import React, { Component } from 'react'\nimport GoogleMap from 'google-map-react'\nimport { fitBounds } from 'google-map-react/utils'\nimport geolib from 'geolib'\nimport Script from 'react-load-script'\n\nimport Pin from './Pin'\nimport ClusterPin from './ClusterPin'\nimport Info from './Info'\nimport infoStyle from './InfoStyle'\nimport searchStyle from './SearchStyle'\nimport { createClusters } from '../utils/clustering'\nimport { objectsAreEqual } from '../utils/objects'\nimport { arraysAreEqual } from '../utils/arrays'\nimport { strToFixed } from '../utils/string'\nimport { addressFromPlace } from '../utils/parse-place'\nimport { enableEnterKey } from '../utils/suggestion-event'\nimport { mapState } from '../state'\n\nconst getLocationsBounds = (locations) => {\n\tconst bounds = new google.maps.LatLngBounds()\n\tlocations.map(location => {\n\t\tbounds.extend(\n\t\t\tnew google.maps.LatLng(\n\t\t\t\tparseFloat(location.lat),\n\t\t\t\tparseFloat(location.lng)\n\t\t\t)\n\t\t)\n\t})\n\treturn bounds\n}\n\n// adds distance from the center for each location\nconst locationsWithDistance = (locations, center) => {\n\treturn locations.map(location => {\n\t\tconst distanceMeters = geolib.getDistance(center, {\n\t\t\tlat: location.lat,\n\t\t\tlng: location.lng\n\t\t})\n\t\tconst distanceMiles = (distanceMeters * 0.000621371).toFixed(2)\n\t\tlocation.distanceFromCenter = distanceMiles\n\t\treturn { ...location }\n\t})\n}\n\nexport default class Map extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.createMapOptions = this.createMapOptions.bind(this)\n\t\tthis.onMapChanged = this.onMapChanged.bind(this)\n\t\tthis.toggleLocation = this.toggleLocation.bind(this)\n\t\tthis.closeLocation = this.closeLocation.bind(this)\n\t\tthis.onPlaceChanged = this.onPlaceChanged.bind(this)\n\t\tthis.handleGoogleMapApiLoad = this.handleGoogleMapApiLoad.bind(this)\n\t\tthis.onClusterClick = this.onClusterClick.bind(this)\n\t\tthis.onMapStateChange = this.onMapStateChange.bind(this)\n\t\tthis.searchByQuery = this.searchByQuery.bind(this)\n\n\t\tthis.state = {\n\t\t\tupdatedLocations: props.locations, // locations + show state (toggled on/off)\n\t\t\tcenter: { lat: 0, lng: 0 },\n\t\t\tzoom: 6,\n\t\t\tplace: null,\n\t\t\tmapLoaded: false,\n\t\t\tprops: null,\n\t\t\tnewBounds: null, // does not seem to change\n\t\t\tsearchInput: ``\n\t\t}\n\t}\n\n\tonClusterClick({ zoom, center }) {\n\t\tif (zoom && center) {\n\t\t\tthis.setState({ zoom, center })\n\t\t} else if (!zoom || !center) {\n\t\t\tconsole.warn(\n\t\t\t\t`Must include zoom: ${zoom} and center: ${JSON.stringify(\n\t\t\t\t\tcenter\n\t\t\t\t)} to update map properly. Try using the updateMap function passed through this.props. \n\t\t\t\tExample:\n\t\t\t\tonClick={() => {\n\t\t\t\t\tupdateMap({\n\t\t\t\t\t\tzoom: this.props.getZoom(this.props.cluster_id)\n\t\t\t\t\t\tcenter: { lat: this.props.lat, lng: this.props.lng }\n\t\t\t\t\t})\n\t\t\t\t}}\n\t\t\t\t`\n\t\t\t)\n\t\t}\n\t}\n\n\t// state locations (including show state) within map bounds\n\tlocationsInBounds(locations, bounds) {\n\t\tif (bounds && bounds.ne && bounds.sw) {\n\t\t\tconst { ne, sw } = bounds;\n\t\t\treturn locations.filter(location => {\n\t\t\t\tconst lat = strToFixed(location.lat, 6)\n\t\t\t\tconst lng = strToFixed(location.lng, 6)\n\t\t\t\tif (\n\t\t\t\t\tlat >= strToFixed(sw.lat, 6) &&\n\t\t\t\t\tlat <= strToFixed(ne.lat, 6) &&\n\t\t\t\t\tlng >= strToFixed(sw.lng, 6) &&\n\t\t\t\t\tlng <= strToFixed(ne.lng, 6)\n\t\t\t\t) {\n\t\t\t\t\treturn location\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tconsole.error('invalid bounds')\n\t\t\treturn locations;\n\t\t}\n\t}\n\n\t// callback on locations in bounds change, either on map change (zoom, center) or locations change\n\tcallBackOnChange (updatedLocations, bounds, center) {\n\t\tconst updatedLocationsInBounds = this.locationsInBounds(updatedLocations, bounds);\n\t\tconst updatedLocationsInBoundsWithDistance = locationsWithDistance(updatedLocationsInBounds, center);\n\t\tif (this.props.onChange && updatedLocationsInBoundsWithDistance) {\n\t\t\tthis.props.onChange(updatedLocationsInBoundsWithDistance)\n\t\t}\n\t}\n\n\t// update clusters + callback onChange with locations currently visible\n\tonMapChanged(props) {\n\t\tif (!props || !this.state.mapLoaded) return\n\t\tconst bounds = {},\n\t\t\tcenter = {\n\t\t\t\tlat: props.center.lat > 90 ? props.center.lat - 180 : props.center.lat,\n\t\t\t\tlng: props.center.lng > 180 ? props.center.lng - 360 : props.center.lng\n\t\t\t}\n\t\tbounds.ne = {\n\t\t\tlat:\n\t\t\t\tprops.bounds.ne.lat > 90\n\t\t\t\t\t? props.bounds.ne.lat - 180\n\t\t\t\t\t: props.bounds.ne.lat,\n\t\t\tlng:\n\t\t\t\tprops.bounds.ne.lng > 180\n\t\t\t\t\t? props.bounds.ne.lng - 360\n\t\t\t\t\t: props.bounds.ne.lng\n\t\t}\n\t\tbounds.sw = {\n\t\t\tlat:\n\t\t\t\tprops.bounds.sw.lat > 90\n\t\t\t\t\t? props.bounds.sw.lat - 180\n\t\t\t\t\t: props.bounds.sw.lat,\n\t\t\tlng:\n\t\t\t\tprops.bounds.sw.lng > 180\n\t\t\t\t\t? props.bounds.sw.lng - 360\n\t\t\t\t\t: props.bounds.sw.lng\n\t\t}\n\n\t\t// locations within the map bounds\n\t\tconst { updatedLocations } = this.state\n\t\tconst updatedLocationsInBounds = this.locationsInBounds(updatedLocations, bounds);\n\n\t\t// if enableClusters is enabled create clusters and set them to the state\n\t\tif (this.props.enableClusters) {\n\t\t\tconst { cluster } = this.props\n\t\t\tthis.setState({\n\t\t\t\tupdatedLocations: createClusters(\n\t\t\t\t\tprops,\n\t\t\t\t\tupdatedLocationsInBounds.length > 0 ? updatedLocationsInBounds : updatedLocations,\n\t\t\t\t\tcluster && cluster.radius,\n\t\t\t\t\tcluster && cluster.extent,\n\t\t\t\t\tcluster && cluster.nodeSize,\n\t\t\t\t\tcluster && cluster.minZoom,\n\t\t\t\t\tcluster && cluster.maxZoom\n\t\t\t\t),\n\t\t\t\tcenter\n\t\t\t})\n\t\t}\n\n\t\tthis.callBackOnChange(updatedLocations, bounds, center);\n\t}\n\n\ttoggleLocation(id) {\n\t\tconst updatedLocations = this.state.updatedLocations.map(location => ({\n\t\t\t...location,\n\t\t\tshow: location.id === id ? !location.show : false\n\t\t}))\n\t\tthis.setState({ updatedLocations })\n\t}\n\n\tcloseLocation(id) {\n\t\tconst updatedLocations = this.state.updatedLocations.map(location => ({\n\t\t\t...location,\n\t\t\tshow: false\n\t\t}))\n\t\tthis.setState({ updatedLocations })\n\t}\n\n\tcreateMapOptions() {\n\t\tconst { mapStyle, mapOptions } = this.props\n\t\treturn {\n\t\t\tstyles: mapOptions && mapOptions.styles || mapStyle,\n\t\t\t...this.props.mapOptions\n\t\t}\n\t}\n\n\tmoveMap(place) {\n\t\tthis.setState({ place })\n\t\tconst { center, zoom } = this.getPlaceViewport(place)\n\t\tthis.setState({\n\t\t\tcenter: center,\n\t\t\tzoom: zoom.toString().length > 1 ? 9 : zoom\n\t\t})\n\t}\n\n\tonPlaceChanged(e) {\n\t\tif (e) {\n\t\t\tif (e.target.value) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tsearchInput: e.target.value\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\tlet place = this.searchBox.getPlace()\n\t\tif (place && place !== this.state.place) {\n\t\t\tif (this.props.submitSearch) {\n\t\t\t\tthis.props.submitSearch(place)\n\t\t\t}\n\t\t\tthis.moveMap(place)\n\n\t\t\tconst updatedAddress = addressFromPlace(place)\n\t\t\tif (this.props.getValue) {\n\t\t\t\tthis.props.getValue(updatedAddress)\n\t\t\t}\n\t\t}\n\t}\n\n\tviewPortWithBounds(bounds) {\n\t\tconst newBounds = {\n\t\t\tne: {\n\t\t\t\tlat: bounds.getNorthEast().lat(),\n\t\t\t\tlng: bounds.getNorthEast().lng()\n\t\t\t},\n\t\t\tsw: {\n\t\t\t\tlat: bounds.getSouthWest().lat(),\n\t\t\t\tlng: bounds.getSouthWest().lng()\n\t\t\t}\n\t\t}\n\t\tlet size = {}\n\t\tif (this.mapEl) {\n\t\t\tsize = {\n\t\t\t\twidth: this.mapEl.offsetWidth,\n\t\t\t\theight: this.mapEl.offsetHeight\n\t\t\t}\n\t\t}\n\t\tthis.setState({\n\t\t\tnewBounds: fitBounds(newBounds, size).newBounds\n\t\t})\n\t\treturn fitBounds(newBounds, size)\n\t}\n\n\tgetPlaceViewport(place) {\n\t\tconst { geometry } = place\n\t\treturn this.viewPortWithBounds(geometry.viewport)\n\t}\n\n\tgetLocationsViewport() {\n\t\tlet center, zoom\n\t\tconst { locations, defaultCenter, defaultZoom } = this.props\n\n\t\tif (locations.length === 1) {\n\t\t\tcenter = {\n\t\t\t\tlat: parseFloat(locations[0].lat),\n\t\t\t\tlng: parseFloat(locations[0].lng)\n\t\t\t}\n\t\t} else {\n\t\t\tconst bounds = getLocationsBounds(locations)\n\t\t\tconst viewport = this.viewPortWithBounds(bounds)\n\t\t\tcenter = viewport.center\n\t\t\tzoom = viewport.zoom\n\t\t}\n\n\t\treturn {\n\t\t\tcenter: center || defaultCenter,\n\t\t\tzoom: zoom || defaultZoom\n\t\t}\n\t}\n\n\tgetCurrentArea() {\n\t\tconst { locations } = this.props\n\t\tconst bounds = getLocationsBounds(locations)\n\n\t\tlet center\n\t\tif (locations.length === 1) {\n\t\t\tcenter = {\n\t\t\t\tlat: parseFloat(locations[0].lat),\n\t\t\t\tlng: parseFloat(locations[0].lng)\n\t\t\t}\n\t\t} else {\n\t\t\tcenter = {\n\t\t\t\tlat: bounds.getCenter().lat(),\n\t\t\t\tlng: bounds.getCenter().lng()\n\t\t\t}\n\t\t}\n\n\t\tlet size = {\n\t\t\twidth: this.mapEl.offsetWidth,\n\t\t\theight: this.mapEl.offsetHeight\n\t\t}\n\n\t\tconst newBounds = {\n\t\t\tne: {\n\t\t\t\tlat: bounds.getNorthEast().lat(),\n\t\t\t\tlng: bounds.getNorthEast().lng()\n\t\t\t},\n\t\t\tnw: {\n\t\t\t\tlat: bounds.getNorthEast().lat(),\n\t\t\t\tlng: bounds.getSouthWest().lng()\n\t\t\t},\n\t\t\tse: {\n\t\t\t\tlat: bounds.getSouthWest().lat(),\n\t\t\t\tlng: bounds.getNorthEast().lng()\n\t\t\t},\n\t\t\tsw: {\n\t\t\t\tlat: bounds.getSouthWest().lat(),\n\t\t\t\tlng: bounds.getSouthWest().lng()\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tcenter: center,\n\t\t\tzoom: this.googleMapRef.props.zoom,\n\t\t\tsize,\n\t\t\tbounds: newBounds\n\t\t}\n\t}\n\n\tonMapStateChange(state) {\n\t\tconst { newBounds, place } = state\n\t\tif (place) {\n\t\t\tthis.setState({ place })\n\t\t}\n\t\tif (newBounds) {\n\t\t\tthis.setState({ newBounds })\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tgoogle.maps.event.clearInstanceListeners(this.searchBox)\n\t\tmapState.unsubscribe(this.onMapStateChange)\n\t}\n\n\tcomponentDidMount() {\n\t\tmapState.subscribe(this.onMapStateChange)\n\t\tconst { google, options } = this.props\n\t\tconst input = this.searchInput\n\t\tif (this.props.initSearch) {\n\t\t\tinput.value = this.props.initSearch\n\t\t}\n\t\tif (input) {\n\t\t\tthis.searchBox = new google.maps.places.Autocomplete(input, options)\n\t\t\tthis.searchBox.addListener('place_changed', this.onPlaceChanged)\n\t\t\tenableEnterKey(input, this.searchBox)\n\t\t}\n\n\t\t// set default map location\n\t\tlet initialCenter, initialZoom\n\t\t// if initial location set by initSearch (D), location will be changed in handleGoogleMapApiLoad\n\t\tif (!this.props.initSearch) {\n\t\t\t// A. if initial location set by initialCenter and initialZoom\n\t\t\tif (this.props.initialCenter) {\n\t\t\t\tinitialCenter = this.props.initialCenter\n\t\t\t}\n\t\t\tif (this.props.initialZoom) {\n\t\t\t\tinitialZoom = this.props.initialZoom\n\t\t\t}\n\t\t\t// B. if initial location set by place => center map on it\n\t\t\tif (this.props.place) {\n\t\t\t\tconst { center, zoom } = this.getPlaceViewport(this.props.place)\n\t\t\t\tinitialCenter = center\n\t\t\t\tinitialZoom = zoom\n\t\t\t}\n\t\t\t// C. if initial location not set => center map on location(s) if any\n\t\t\telse if (this.props.locations && this.props.locations.length > 0) {\n\t\t\t\tconst { center, zoom } = this.getLocationsViewport()\n\t\t\t\tinitialCenter = center\n\t\t\t\tinitialZoom = zoom\n\t\t\t}\n\t\t}\n\t\tthis.setState({\n\t\t\tzoom: initialZoom || this.props.defaultZoom,\n\t\t\tcenter: initialCenter || this.props.defaultCenter\n\t\t})\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tconst { initSearch: propsInitSearch, place: propsPlace, locations: propsLocations } = this.props\n\t\tconst { initSearch: prevPropsInitSearch, place: prevPropsPlace, locations: prevPropsLocations } = prevProps\n\t\tconst { place: statePlace, updatedLocations: stateUpdatedLocations, center } = this.state\n\t\tconst { place: prevStatePlace, updatedLocations: prevStateUpdatedLocations } = prevState\n\n\t\t// add or remove any new or deleted location\n\t\tif (propsLocations)\n\t\t{\n\t\t\tconst prevPropsLocationsArray = prevPropsLocations ? prevPropsLocations : [];\n\t\t\tconst prevPropsLocationsIds = prevPropsLocationsArray.map(location => location.id);\n\t\t\tconst propsLocationsIds = propsLocations.map(location => location.id);\n\t\t\tif (!arraysAreEqual(prevPropsLocationsIds, propsLocationsIds))\n\t\t\t{\n\t\t\t\t// get added locations (in propsLocations and not in prevPropsLocations)\n\t\t\t\tconst addedLocations = propsLocations.filter(propsLocation => !prevPropsLocationsIds.includes(propsLocation.id));\n\t\t\t\t// get removed locations (in prevPropsLocations and not in propsLocations)\n\t\t\t\tconst removedLocations = prevPropsLocationsArray.filter(prevPropsLocation => !propsLocationsIds.includes(prevPropsLocation.id));\n\t\t\t\t// update state immutably (merge & filter) - keep show state of existing locations\n\t\t\t\tconst updatedLocations = [...stateUpdatedLocations, ...addedLocations].filter(location => !removedLocations.map(loc => loc.id).includes(location.id))\n\t\t\t\tthis.setState({ updatedLocations });\n\t\t\t\tthis.callBackOnChange(updatedLocations, this.map && this.map.getBounds(), center);\n\t\t\t}\n\t\t}\n\t\n\n\t\tif (propsPlace && prevPropsPlace !== propsPlace && propsPlace !== statePlace) {\n\t\t\tthis.moveMap(propsPlace)\n\t\t}\n\t\tif (statePlace && statePlace !== prevStatePlace) {\n\t\t\tthis.moveMap(statePlace)\n\t\t}\n\t\tif (propsInitSearch && prevPropsInitSearch !== propsInitSearch) {\n\t\t\tthis.searchByQuery(propsInitSearch)\n\t\t}\n\t}\n\n\tsearchByQuery(query) {\n\t\tconst service = new google.maps.places.PlacesService(this.map)\n\t\tservice.findPlaceFromQuery(\n\t\t\t{\n\t\t\t\tquery: query,\n\t\t\t\tfields: [\n\t\t\t\t\t'photos',\n\t\t\t\t\t'formatted_address',\n\t\t\t\t\t'name',\n\t\t\t\t\t'rating',\n\t\t\t\t\t'opening_hours',\n\t\t\t\t\t'geometry'\n\t\t\t\t]\n\t\t\t},\n\t\t\t(results, status) => {\n\t\t\t\tconst result = results ? results[0] : null\n\n\t\t\t\t// no or invalid result from google PlacesService => center map on defaultCenter or locations\n\t\t\t\tif (!result || results.length < 1) {\n\t\t\t\t\tconsole.warn('No locations with given query')\n\t\t\t\t\tlet locationsViewport\n\n\t\t\t\t\t// center map on locations if any\n\t\t\t\t\tif (this.props.locations && this.props.locations.length > 0) {\n\t\t\t\t\t\tlocationsViewport = this.getLocationsViewport()\n\t\t\t\t\t}\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tcenter: locationsViewport.center || this.props.defaultCenter,\n\t\t\t\t\t\tzoom: locationsViewport.zoom || this.props.defaultZoom,\n\t\t\t\t\t\tmapLoaded: true\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\t// correct result from google PlacesService => set map location to it\n\t\t\t\telse if (status == google.maps.places.PlacesServiceStatus.OK) {\n\t\t\t\t\tconst { center, zoom } = this.getPlaceViewport(result)\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tcenter: center,\n\t\t\t\t\t\tzoom: zoom.toString().length > 1 ? 9 : zoom, // limit zoom to 9\n\t\t\t\t\t\tmapLoaded: true\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t)\n\t}\n\n\thandleGoogleMapApiLoad({ map }) {\n\t\tthis.map = map\n\n\t\t// D. if initial location set by initSearch => get location from it and center on it\n\t\tif (!mapState.state.place) {\n\t\t\tif (this.props.initSearch) {\n\t\t\t\tthis.searchByQuery(this.props.initSearch)\n\t\t\t}\n\t\t}\n\n\t\tif (this.props.mapLoaded) {\n\t\t\tthis.props.mapLoaded()\n\t\t}\n\n\t\tthis.setState({ mapLoaded: true })\n\n\t\t// if initial location was set before map was loaded in componentDidMount (case A, B or C), callback onMapChanged with correct view data to update visible locations\n\t\t// this is not needed for case D because onMapChanged is automatically called when map is loaded\n\t\tif (!this.props.initSearch) {\n\t\t\tif (this.props.locations && this.props.locations.length > 0) {\n\t\t\t\tconst { center, zoom, size, bounds } = this.getCurrentArea()\n\t\t\t\tthis.onMapChanged({ center, zoom, size, bounds })\n\t\t\t}\n\t\t}\n\t}\n\n\trender() {\n\t\tlet Pin = this.props.pin.component || this.props.pin\n\t\tlet ClusterPin = this.props.cluster\n\t\t\t? this.props.cluster.component\n\t\t\t: this.props.clusterPin\n\t\t\t? this.props.clusterPin.component\n\t\t\t: this.props.defaultClusterPin\n\n\t\tconst { zoom, center, updatedLocations } = this.state\n\n\t\tconst updatedLocationsInBounds = this.locationsInBounds(updatedLocations, this.map && this.map.getBounds());\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\theight: this.props.height,\n\t\t\t\t\twidth: this.props.width,\n\t\t\t\t\tposition: 'relative'\n\t\t\t\t}}\n\t\t\t\tref={mapEl => (this.mapEl = mapEl)}\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\ttop: 5,\n\t\t\t\t\t\tleft: 5,\n\t\t\t\t\t\tzIndex: 2\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"storeLocatorInput\"\n\t\t\t\t\t\tstyle={searchStyle.searchInput}\n\t\t\t\t\t\tonChange={this.onPlaceChanged}\n\t\t\t\t\t\tref={input => (this.searchInput = input)}\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Enter Your Location...\"\n\t\t\t\t\t\taria-label=\"search\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t{this.props.enableClusters && (\n\t\t\t\t\t<Script url=\"https://unpkg.com/kdbush@3.0.0/kdbush.min.js\" />\n\t\t\t\t)}\n\t\t\t\t<GoogleMap\n\t\t\t\t\tref={ref => (this.googleMapRef = ref)}\n\t\t\t\t\tonGoogleApiLoaded={this.handleGoogleMapApiLoad}\n\t\t\t\t\tbootstrapURLKeys={{ key: this.props.googleApiKey }}\n\t\t\t\t\tyesIWantToUseGoogleMapApiInternals\n\t\t\t\t\tonTilesLoaded={this.props.tilesRendered}\n\t\t\t\t\tcenter={this.props.center || center}\n\t\t\t\t\tzoom={this.props.zoom || zoom}\n\t\t\t\t\toptions={this.createMapOptions}\n\t\t\t\t\tonChange={this.onMapChanged}\n\t\t\t\t\tgestureHandling={this.props.gestureHandling || `cooperative`}\n\t\t\t\t>\n\t\t\t\t\t{updatedLocationsInBounds.map(location => {\n\t\t\t\t\t\tif (location.cluster_id) {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<ClusterPin\n\t\t\t\t\t\t\t\t\tkey={location.id}\n\t\t\t\t\t\t\t\t\tlat={location.lat}\n\t\t\t\t\t\t\t\t\tlng={location.lng}\n\t\t\t\t\t\t\t\t\tupdateMap={updates => this.onClusterClick(updates)}\n\t\t\t\t\t\t\t\t\t{...location}\n\t\t\t\t\t\t\t\t\tpinProps={\n\t\t\t\t\t\t\t\t\t\t(this.props.cluster && this.props.cluster.pinProps) || null\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Pin\n\t\t\t\t\t\t\t\tkey={location.id}\n\t\t\t\t\t\t\t\thandleLocationClick={this.toggleLocation}\n\t\t\t\t\t\t\t\tlat={location.lat}\n\t\t\t\t\t\t\t\tlng={location.lng}\n\t\t\t\t\t\t\t\t{...location}\n\t\t\t\t\t\t\t\t{...this.props}\n\t\t\t\t\t\t\t\tpinProps={this.props.pin.pinProps || null}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{!this.props.children ? (\n\t\t\t\t\t\t\t\t\t<Info show={location.show} style={this.props.infoStyle}>\n\t\t\t\t\t\t\t\t\t\t<div style={infoStyle.main}>\n\t\t\t\t\t\t\t\t\t\t\t{Object.keys(location).map((k, i) => {\n\t\t\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\t\t\tk === 'id' ||\n\t\t\t\t\t\t\t\t\t\t\t\t\tk === 'lat' ||\n\t\t\t\t\t\t\t\t\t\t\t\t\tk === 'lng' ||\n\t\t\t\t\t\t\t\t\t\t\t\t\tk === 'show'\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={k}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tk === 'name'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? { marginBottom: '12px' }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: { marginBottom: '2px' }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{`${location[k]}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={infoStyle.close}\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.closeLocation(location.id)}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t×\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</Info>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\tthis.props.children(location, this.closeLocation)\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Pin>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</GoogleMap>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nMap.defaultProps = {\n\tpin: Pin,\n\tdefaultClusterPin: ClusterPin,\n\tmapStyle: {},\n\theight: '800px',\n\twidth: '100%',\n\tdefaultCenter: { lat: 0, lng: 180 },\n\tdefaultZoom: 8\n}\n"]}